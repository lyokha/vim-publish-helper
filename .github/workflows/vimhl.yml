name: vimhl
on: push
jobs:
  build:
    runs-on: ubuntu-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        ghc: ['8.6', '8.8', '8.10', '9.0', '9.2', '9.4']
        cabal: ['3.10']
        experimental: [false]
        release: [false]
        include:
          - ghc: '9.6'
            cabal: '3.10'
            experimental: false
            release: true
        include:
          - ghc: '9.8'
            cabal: '3.10'
            experimental: false
            release: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install GHC and Cabal
        uses: haskell-actions/setup@v2
        with:
          ghc-version: ${{ matrix.ghc }}
          cabal-version: ${{ matrix.cabal }}
      - name: Set tag name
        uses: olegtarasov/get-tag@v2.1.3
        id: tag
      - name: Build
        if: ${{ matrix.release || ! startsWith(github.ref, 'refs/tags/') }}
        run: |
          cabal --version
          echo "$(ghc --version) "`
              `"[$(ghc --print-project-git-commit-id 2>/dev/null || echo '?')]"
          cabal update
          mkdir dist
          cd pandoc/haskell
          cabal install exe:vimhl --install-method=copy \
              --overwrite-policy=always --installdir=../../dist
          cd -
          cp dist/vimhl \
              dist/vimhl-${{ steps.tag.outputs.tag }}-ghc-${{ matrix.ghc }}
      - name: Compress binary
        uses: svenstaro/upx-action@2.4.1
        if: ${{ matrix.release && startsWith(github.ref, 'refs/tags/') }}
        with:
          file: |
            dist/vimhl-${{ steps.tag.outputs.tag }}-ghc-${{ matrix.ghc }}
      - name: Release
        uses: softprops/action-gh-release@v2
        if: ${{ matrix.release && startsWith(github.ref, 'refs/tags/') }}
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_VIMHL }}
        with:
          files: |
            dist/vimhl-${{ steps.tag.outputs.tag }}-ghc-${{ matrix.ghc }}

